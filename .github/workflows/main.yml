name: Deploy Percycraft

on:
  - push

permissions:
  id-token: write
  contents: read

jobs:
  build-trigger:
    runs-on: ubuntu-latest
    outputs:
      lobby-ami: ${{ steps.lobby-ami.outputs.src }}
      percycraft-base-ami: ${{ steps.percycraft-base-ami.outputs.src }}
      percycraft-smp-ami: ${{ steps.percycraft-smp-ami.outputs.src }}
      create-anything-ami: ${{ steps.create-anything-ami.outputs.src }}
      percycraft-vpc: ${{ steps.percycraft-vpc.outputs.src }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v3
      name: Lobby AMI
      id: lobby-ami
      with:
        base: ${{ github.ref }}
        filters: |
          src:
            - 'lobby-ami/**'
    - uses: dorny/paths-filter@v3
      name: Percycraft Base AMI
      id: percycraft-base-ami
      with:
        base: ${{ github.ref }}
        filters: |
          src:
            - 'percycraft-base-ami/**'
    - uses: dorny/paths-filter@v3
      id: percycraft-smp-ami
      name: Percycraft SMP AMI
      with:
        base: ${{ github.ref }}
        filters: |
          src:
            - 'percycraft-smp-ami/**'
    - uses: dorny/paths-filter@v3
      id: create-anything-ami
      name: Create Anything AMI
      with:
        base: ${{ github.ref }}
        filters: |
          src:
            - 'create-anything-ami/**'
    - uses: dorny/paths-filter@v3
      id: percycraft-vpc
      name: Percycraft VPC
      with:
        base: ${{ github.ref }}
        filters: |
          src:
            - 'percycraft-vpc/**'
  lobby-ami:
    needs: build-trigger
    if: needs.build-trigger.outputs.lobby-ami == 'true'
    runs-on: ubuntu-latest
    name: Create lobby-ami
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.ROLETOASSUME }}
          role-session-name: GithubDeployPercycraft
          aws-region: ${{ secrets.AWSREGION }}
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: latest
      - name: Run Packer
        run: |
          packer init lobby-ami/
          packer validate -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" lobby-ami/
          packer build -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" lobby-ami/lobby-ami.pkr.hcl
  percycraft-base-ami:
    needs: build-trigger
    if: needs.build-trigger.outputs.percycraft-base-ami == 'true'
    runs-on: ubuntu-latest
    name: Create percycraft-base-ami
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.ROLETOASSUME }}
          role-session-name: GithubDeployPercycraft
          aws-region: ${{ secrets.AWSREGION }}
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      - name: Run Packer
        run: |
          packer init percycraft-base-ami/
          packer validate -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" percycraft-base-ami/
          packer build -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" percycraft-base-ami/percycraft-base-ami.pkr.hcl
  percycraft-smp-ami:
    needs:
      - build-trigger
      - percycraft-base-ami
    if: |
      always() && !(
        contains(needs.*.result, 'failure') ||
        contains(needs.*.result, 'cancelled')
      ) && (
        needs.build-trigger.outputs.percycraft-smp-ami == 'true' ||
        needs.percycraft-base-ami.result == 'success'
      )
    runs-on: ubuntu-latest
    name: Create percycraft-smp-ami
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.ROLETOASSUME }}
          role-session-name: GithubDeployPercycraft
          aws-region: ${{ secrets.AWSREGION }}
      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: latest
      - name: Run Packer
        run: |
          packer init percycraft-smp-ami/
          packer validate -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" percycraft-smp-ami/
          packer build -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" percycraft-smp-ami/percycraft-smp-ami.pkr.hcl
  create-anything-ami:
    needs:
      - build-trigger
      - percycraft-base-ami
    if: |
      always() && !(
        contains(needs.*.result, 'failure') ||
        contains(needs.*.result, 'cancelled')
      ) && (
        needs.build-trigger.outputs.create-anything-ami == 'true' ||
        needs.percycraft-base-ami.result == 'success'
      )
    runs-on: ubuntu-latest
    name: Create create-anything-ami
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.ROLETOASSUME }}
          role-session-name: GithubDeployPercycraft
          aws-region: ${{ secrets.AWSREGION }}
      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: latest
      - name: Run Packer
        run: |
          packer init create-anything-ami/
          packer validate -var "cfapikey=${{ secrets.CURSEFORGEAPIKEY }}" -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" create-anything-ami/
          packer build -var "cfapikey=${{ secrets.CURSEFORGEAPIKEY }}" -var "branch=${{ github.ref_name }}" -var "repository=https://github.com/${{ github.repository }}.git" create-anything-ami/create-anything-ami.pkr.hcl
  percycraft-smp-vpc:
    needs: build-trigger
    if: needs.build-trigger.outputs.percycraft-vpc == 'true'
    runs-on: ubuntu-latest
    name: Update percycraft-smp-vpc
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.ROLETOASSUME }}
          role-session-name: GithubDeployPercycraft
          aws-region: ${{ secrets.AWSREGION }}
      - name: Deploy to AWS
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: percycraft
          template: percycraft-vpc/cf.yml
          parameter-overrides: "EC2AMI=/percycraft/ami-latest/percycraft-smp-ami,KeyPairName=${{ secrets.KEYPAIRNAME }},YourIPv4=${{ secrets.YOURIPV4 }},Players=\"${{ secrets.PERCYCRAFTSMPPLAYERS }}\",WeekdayStartSchedule=\"\",WeekdayStopSchedule=\"\",WeekendStartSchedule=\"\",WeekendStopSchedule=\"\",FileServerHostName=${{ secrets.PERCYCRAFTSMPFILESERVER }}"
          no-execute-changeset: 1
          no-fail-on-empty-changeset: 1
  create-anything-vpc:
    needs: build-trigger
    if: needs.build-trigger.outputs.percycraft-vpc == 'true'
    runs-on: ubuntu-latest
    name: Update create-anything-vpc
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.ROLETOASSUME }}
          role-session-name: GithubDeployPercycraft
          aws-region: ${{ secrets.AWSREGION }}
      - name: Deploy to AWS
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: create-anything
          template: percycraft-vpc/cf.yml
          parameter-overrides: "EC2AMI=/percycraft/ami-latest/create-anything-ami,KeyPairName=${{ secrets.KEYPAIRNAME }},YourIPv4=${{ secrets.YOURIPV4 }},Players=\"${{ secrets.CREATEANYTHINGPLAYERS }}\",WeekdayStartSchedule=\"\",WeekdayStopSchedule=\"\",WeekendStartSchedule=\"\",WeekendStopSchedule=\"\",FileServerHostName=${{ secrets.CREATEANYTHINGFILESERVER }}"
          no-execute-changeset: 1
          no-fail-on-empty-changeset: 1
